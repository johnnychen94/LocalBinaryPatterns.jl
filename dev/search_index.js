var documenterSearchIndex = {"docs":
[{"location":"reference/#API-References","page":"API References","title":"API References","text":"","category":"section"},{"location":"reference/","page":"API References","title":"API References","text":"Modules = [LocalBinaryPatterns]","category":"page"},{"location":"reference/#LocalBinaryPatterns.lbp_original-Tuple{AbstractArray}","page":"API References","title":"LocalBinaryPatterns.lbp_original","text":"lbp_original(X; kwargs...)\nlbp_original!(out, X; kwargs...)\n\nCompute the local binary pattern, the original version, of gray image X using 3x3 neighborhood matrix.\n\nParameters\n\nrotation=false: set true to generate patterns that are invariant to rotation [3].\n\nExamples\n\njulia> X = [6 7 9; 5 6 3; 2 1 7]\n3×3 Matrix{Int64}:\n 6  7  9\n 5  6  3\n 2  1  7\n\njulia> lbp_original(X)\n3×3 Matrix{UInt8}:\n 0xc0  0x40  0x00\n 0x68  0xa9  0x1b\n 0x28  0x6b  0x00\n\njulia> lbp_original(X; rotation=true)\n3×3 Matrix{UInt8}:\n 0x03  0x01  0x00\n 0x0d  0x35  0x1b\n 0x05  0x5b  0x00\n\nExtended help\n\nLocal binary pattern\n\nThe following is how local binary pattern is calculated, the original version[1]:\n\n3x3 block     center-thresholded     weights         multiplied by weights      sum\n6  7  9         1  1  1              1  8  32          1   8  32\n5  6  3  ==>    0  x  0     ==>      2  x  64  ==>     0   x  0            ==>  169\n2  1  7         1  0  1              4  16 128         0   0  128\n\nAny binary pattern of length 8, i.e., the center-thresholded result, can be uniquely represented as an UInt8 value; the weighted sum is the encoding process.\n\nRotation-invariant encoding\n\nThe rotation-invariant encoding is to map all elements in the bitrotation equivalent class to the minimal value of this class. For example, 0b11010000 and 0b01000011 belongs to the same class because bitrotate(0b01000011, -2) == 0b11010000, thus both values are mapped to 0b00001101. See also Eq.(8) in [2].\n\nFor 3x3 neighborhood matrix, applying rotation-invariant encoding decreases the possible number of binary patterns from 256 to 36.\n\nReferences\n\n[1] T. Ojala, M. Pietikäinen, and D. Harwood, “A comparative study of texture measures with classification based on featured distributions,” Pattern Recognition, vol. 29, no. 1, pp. 51–59, Jan. 1996, doi: 10.1016/0031-3203(95)00067-4.\n[2] T. Ojala, M. Pietikäinen, and T. Mäenpää, “A Generalized Local Binary Pattern Operator for Multiresolution Gray Scale and Rotation Invariant Texture Classification,” in Advances in Pattern Recognition — ICAPR 2001, vol. 2013, S. Singh, N. Murshed, and W. Kropatsch, Eds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2001, pp. 399–408. doi: 10.1007/3-540-44732-6_41.\n[3] Pietikäinen, Matti, Timo Ojala, and Zelin Xu. \"Rotation-invariant texture classification using feature distributions.\" Pattern recognition 33.1 (2000): 43-52.\n\n\n\n\n\n","category":"method"},{"location":"#LocalBinaryPatterns","page":"Home","title":"LocalBinaryPatterns","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LocalBinaryPatterns.","category":"page"}]
}
